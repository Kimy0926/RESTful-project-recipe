// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMSApiServer;

#nullable disable

namespace RMSApiServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RMSApiServer.Models.Company", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Name");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("RMSApiServer.Models.Equipment", b =>
                {
                    b.Property<string>("EquipmentId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SiteId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EquipmentId", "SiteId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("RMSApiServer.Models.EquipmentRecipeMap", b =>
                {
                    b.Property<string>("EquipmentId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RecipeId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SiteId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EquipmentId", "RecipeId", "SiteId");

                    b.HasIndex("EquipmentId", "SiteId");

                    b.HasIndex("RecipeId", "SiteId");

                    b.ToTable("EquipmentRecipeMap");
                });

            modelBuilder.Entity("RMSApiServer.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("RMSApiServer.Models.Recipe", b =>
                {
                    b.Property<string>("RecipeId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SiteId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RecipeId", "SiteId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("RMSApiServer.Models.RecipeParameter", b =>
                {
                    b.Property<string>("RecipeId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RecipeParamId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SiteId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("LSL")
                        .HasColumnType("float");

                    b.Property<string>("RecipeParamName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Target")
                        .HasColumnType("float");

                    b.Property<float>("USL")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RecipeId", "RecipeParamId", "SiteId");

                    b.HasIndex("RecipeId", "SiteId");

                    b.ToTable("RecipeParameter");
                });

            modelBuilder.Entity("RMSApiServer.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RMSApiServer.Models.EquipmentRecipeMap", b =>
                {
                    b.HasOne("RMSApiServer.Models.Equipment", "Equipment")
                        .WithMany("EquipmentRecipeMap")
                        .HasForeignKey("EquipmentId", "SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMSApiServer.Models.Recipe", "Recipe")
                        .WithMany("EquipmentRecipeMap")
                        .HasForeignKey("RecipeId", "SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RMSApiServer.Models.Job", b =>
                {
                    b.HasOne("RMSApiServer.Models.Company", "Company")
                        .WithMany("Job")
                        .HasForeignKey("CompanyName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("RMSApiServer.Models.RecipeParameter", b =>
                {
                    b.HasOne("RMSApiServer.Models.Recipe", "Recipe")
                        .WithMany("RecipeParameter")
                        .HasForeignKey("RecipeId", "SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RMSApiServer.Models.Company", b =>
                {
                    b.Navigation("Job");
                });

            modelBuilder.Entity("RMSApiServer.Models.Equipment", b =>
                {
                    b.Navigation("EquipmentRecipeMap");
                });

            modelBuilder.Entity("RMSApiServer.Models.Recipe", b =>
                {
                    b.Navigation("EquipmentRecipeMap");

                    b.Navigation("RecipeParameter");
                });
#pragma warning restore 612, 618
        }
    }
}
